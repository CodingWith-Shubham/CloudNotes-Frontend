{"ast":null,"code":"import _objectSpread from\"C:/Users/mamga/OneDrive/Desktop/Cloudnotes/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from\"react\";import noteContext from\"./noteContext\";import{jsx as _jsx}from\"react/jsx-runtime\";const NoteState=props=>{const host=\"https://cloud-notes-backend-poou.vercel.app\";const notesinitial=[];const[notes,setnotes]=useState(notesinitial);// Fetch all notes\nconst getnotes=async()=>{const response=await fetch(\"\".concat(host,\"/api/notes/fetchnotes\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",authtoken:localStorage.getItem('token')}});const json=await response.json();setnotes(json);};// Add a new note\nconst addnotes=async(title,description)=>{const response=await fetch(\"\".concat(host,\"/api/notes/addnotes\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\",authtoken:localStorage.getItem('token')},body:JSON.stringify({title,description})});const json=await response.json();setnotes(notes.concat(json));};// Delete a note\nconst deletenotes=async id=>{const response=await fetch(\"\".concat(host,\"/api/notes/deletenotes/\").concat(id),{method:\"DELETE\",headers:{\"Content-Type\":\"application/json\",authtoken:localStorage.getItem('token')}});setnotes(prevNotes=>prevNotes.filter(note=>note._id!==id));console.log(\"Note deleted:\",id);};// Update a note\nconst editnotes=async(id,title,description)=>{const response=await fetch(\"\".concat(host,\"/api/notes/updatenotes/\").concat(id),{method:\"PUT\",headers:{\"Content-Type\":\"application/json\",authtoken:localStorage.getItem('token')},body:JSON.stringify({title,description})});const json=await response.json();setnotes(notes.map(note=>note._id===id?_objectSpread(_objectSpread({},note),{},{title:json.title,description:json.description}):note));};return/*#__PURE__*/_jsx(noteContext.Provider,{value:{notes,getnotes,addnotes,deletenotes,editnotes},children:props.children});};export default NoteState;","map":{"version":3,"names":["React","useState","noteContext","jsx","_jsx","NoteState","props","host","notesinitial","notes","setnotes","getnotes","response","fetch","concat","method","headers","authtoken","localStorage","getItem","json","addnotes","title","description","body","JSON","stringify","deletenotes","id","prevNotes","filter","note","_id","console","log","editnotes","map","_objectSpread","Provider","value","children"],"sources":["C:/Users/mamga/OneDrive/Desktop/Cloudnotes/frontend/src/Context/notes/noteState.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport noteContext from \"./noteContext\";\r\n\r\nconst NoteState = (props) => {\r\n  const host = \"https://cloud-notes-backend-poou.vercel.app\";\r\n  const notesinitial = [];\r\n\r\n  const [notes, setnotes] = useState(notesinitial);\r\n\r\n  // Fetch all notes\r\n  const getnotes = async () => {\r\n    const response = await fetch(`${host}/api/notes/fetchnotes`, {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authtoken : localStorage.getItem('token'),\r\n      },\r\n    });\r\n    const json = await response.json();\r\n    setnotes(json);\r\n  };\r\n\r\n  // Add a new note\r\n  const addnotes = async (title, description) => {\r\n    const response = await fetch(`${host}/api/notes/addnotes`, {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authtoken : localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({ title, description }),\r\n    });\r\n    const json = await response.json();\r\n    setnotes(notes.concat(json));\r\n  };\r\n\r\n  // Delete a note\r\n  const deletenotes = async (id) => {\r\n    const response = await fetch(`${host}/api/notes/deletenotes/${id}`, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authtoken : localStorage.getItem('token'),\r\n      },\r\n  \r\n    });\r\n   \r\n    setnotes((prevNotes) => prevNotes.filter((note) => note._id !== id));\r\n    console.log(\"Note deleted:\", id);\r\n  };\r\n\r\n  // Update a note\r\n  const editnotes = async (id, title, description) => {\r\n    const response = await fetch(`${host}/api/notes/updatenotes/${id}`, {\r\n      method: \"PUT\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        authtoken : localStorage.getItem('token'),\r\n      },\r\n      body: JSON.stringify({ title, description }),\r\n    });\r\n    const json = await response.json();\r\n    setnotes(\r\n      notes.map((note) =>\r\n        note._id === id ? { ...note, title: json.title, description: json.description } : note\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <noteContext.Provider value={{ notes, getnotes, addnotes, deletenotes, editnotes }}>\r\n      {props.children}\r\n    </noteContext.Provider>\r\n  );\r\n};\r\n\r\nexport default NoteState;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}